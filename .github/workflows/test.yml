# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Test

on:
  pull_request_target:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
  push:
    branches:
      - main
      - develop
      - "*"
    tags-ignore:
      - "*"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Install required packages
        run: sudo apt-get update && sudo apt-get install -y libgl1-mesa-dev xorg-dev

      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.20"

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

      - name: Build and release executables
        # if: startswith(github.ref,'refs/heads/master')
        if: startswith(github.ref,'feature/deployment')
        run: |
          GOOS=darwin GOARCH=amd64 go build -o MastoTool
          GOOS=windows GOARCH=amd64 go build -o MastoTool.exe
          GOOS=linux GOARCH=amd64 go build -o mastotool

      - name: Upload executables as artifacts
        if: startswith(github.ref,'refs/heads/master')
        uses: actions/upload-artifact@v3
        with:
          name: release-artifacts
          path: |
            MastoTool
            MastoTool.exe
            mastotool
      # - name: Trigger Deploy job
      #   # runs-on: []
      #   # container: xyz
      #   if: startswith(github.ref,'refs/heads/master')
      #     steps:
      #     #   - name: Repo dispatch
      #     #     uses: peter-evans/repository-dispatch@v2
      #     #     with:
      #     #       token: PAT
      #     #       repository:
      #     #       event-type: trigger-deployment
