# .github/workflows/go_app.yml

name: Go Application CI/CD

on:
  pull_request_target:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
  push:
    branches:
      - main
      - develop
      - "*"
    tags-ignore:
      - "*"

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - name: Install required packages
        run: sudo apt-get update && sudo apt-get install -y libgl1-mesa-dev xorg-dev

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.x
          
      - name: Build the Go application
        run: go version && pwd && ls -lR && go build -o myapp

  build:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Build the Go application
        run: go version && pwd && ls -lR && go build -o myapp

  test:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Run tests and generate code coverage report
        run: go test -coverprofile=coverage.out ./...

      - name: Upload coverage report
        if: always() # Upload coverage report regardless of test success
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: coverage.out

  release:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Build and release executables
        run: |
          GOOS=darwin GOARCH=amd64 go build -o myapp_macOS
          GOOS=windows GOARCH=amd64 go build -o myapp_windows.exe
          GOOS=linux GOARCH=amd64 go build -o myapp_linux

      - name: Upload executables as artifacts
        if: always() # Upload executables regardless of build success
        uses: actions/upload-artifact@v2
        with:
          name: release-artifacts
          path: |
            myapp_macOS
            myapp_windows.exe
            myapp_linux
